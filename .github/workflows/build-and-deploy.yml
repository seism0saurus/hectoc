name: "Build and deploy"

on:
  push:
    branches: [ "main" ]
  pull_request:
    # The branches below must be a subset of the branches above
    branches: [ "main" ]
    types: [ "closed" ]

env:
  VERSION: 0.0.1-SNAPSHOT

jobs:
  build-shared:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'
          cache: maven
      - name: Build the shared part of the project
        run: mvn --batch-mode install --file shared/pom.xml
      - name: Cache local Maven repository
        uses: actions/cache/save@v3
        with:
          path: ~/.m2/repository
          key: maven

  build-bot:
    runs-on: ubuntu-latest
    needs: build-shared
    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'
          cache: maven
      - name: Get cache for local Maven repository
        uses: actions/cache/restore@v3
        with:
          path: ~/.m2/repository
          key: maven
      - name: Build the bot
        run: mvn --batch-mode --update-snapshots install --file bot/pom.xml
      - name: Archive bot jar
        uses: actions/upload-artifact@v3
        with:
          name: bot
          path: /bot/target/bot-${VERSION}.jar
          retention-days: 1

  create-image-bot:
    runs-on: ubuntu-latest
    needs: build-bot
    steps:
      - uses: actions/checkout@v4
      - uses: actions/download-artifact@v3
        with:
          name: bot
          path: bot/containerimage
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: ghcr.io/seism0saurus/hectoc-bot
      - name: Build and push Docker image
        uses: docker/build-push-action@v3
        with:
          context: bot/containerimage/.
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

  build-webapp:
    runs-on: ubuntu-latest
    needs: build-shared
    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'
          cache: maven
      - name: Get cache for local Maven repository
        uses: actions/cache/restore@v3
        with:
          path: ~/.m2/repository
          key: maven
      - name: Install Node
        uses: actions/setup-node@v4
        with:
          node-version: 18.13.0
          cache: 'npm'
          cache-dependency-path: '**/package-lock.json'
      - name: npm dependencies and Angular cli
        run: cd webapp/angular && npm install -g @angular/cli@15.2.10
      - name: Build the webapp
        run: mvn --batch-mode --update-snapshots install --file webapp/pom.xml
      - name: Archive webapp jar
        uses: actions/upload-artifact@v3
        with:
          name: webapp
          path: /webapp/target/webapp-${VERSION}.jar
          retention-days: 1

  build-bruteforcer:
    runs-on: ubuntu-latest
    needs: build-shared
    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'
          cache: maven
      - name: Get cache for local Maven repository
        uses: actions/cache/restore@v3
        with:
          path: ~/.m2/repository
          key: maven
      - name: Build the bruteforcer
        run: mvn --batch-mode --update-snapshots install --file bruteforcer/pom.xml
